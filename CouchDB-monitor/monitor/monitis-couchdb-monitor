#!/bin/bash
#############################################################################
#	COUCH-DB MONITOR START SCRIPT                                           #
#	Author: Arthur Tumanyan <arthurtumanyan@yahoo.com>                  #
#	Company: Netangels <http://www.netangels.net>                       # 
#############################################################################
#
#set -x
# sources included
SOURCE_PATH=
#
source ${SOURCE_PATH}monitis_api.sh   || exit 2
source ${SOURCE_PATH}monitis_constant.sh || exit 2

ADDITIONAL_PARAMS=""
MONITOR_NAME="CouchDB_Monitor"_`hostname`
MONITOR_TAG="couchdb"
MONITOR_TYPE="customMonitor"
PROTO='http'
#
TMP_COUCH=.tmp_couchdb
MONITOR_ID_FILE=.monitor.id
JSAWK=/usr/bin/jsawk
CURL=$(which curl)
STATLINK="$PROTO://$TARGET_HOST:$TARGET_PORT/_stats"
#
#
declare data
declare postdata
declare result
declare UOM
UOM=''
#
function get_data()
{
#
data=$($CURL -s $STATLINK > $TMP_COUCH)
#
COUCH_PID=$(netstat -lpt|grep '5984'|awk '{print $7}'|awk -F '/' '{print $1}')
#
vm_peak=$(cat /proc/$COUCH_PID/status|grep 'VmPeak'|awk '{print $2}')
UOM=$(cat /proc/$COUCH_PID/status|grep 'VmSize'|awk '{print $3}')
postdata=$postdata"vm_peak:$vm_peak;"
result=$result"vm_peak:Virtual+Memory+Peak:$UOM:2;";
#
vm_size=$(cat /proc/$COUCH_PID/status|grep 'VmSize'|awk '{print $2}')
UOM=$(cat /proc/$COUCH_PID/status|grep 'VmSize'|awk '{print $3}')
postdata=$postdata"vm_size:$vm_size;"
result=$result"vm_size:Virtual+Memory+Size:$UOM:2;";
#
vm_data=$(cat /proc/$COUCH_PID/status|grep 'VmData'|awk '{print $2}')
UOM=$(cat /proc/$COUCH_PID/status|grep 'VmData'|awk '{print $3}')
postdata=$postdata"vm_data:$vm_data;"
result=$result"vm_data:Data+Segment+Size:$UOM:2;";
#
#
cached_memory=$(cat /proc/meminfo|grep 'Cached'|head -1|awk '{print $2}')
UOM=$(cat /proc/meminfo|grep 'Cached'|head -1|awk '{print $3}')
postdata=$postdata"cached_memory:$cached_memory;"
result=$result"cached_memory:File+System+Swap:$UOM:2;";
#
UOM='NA'
#
#couchdb
for ITER in "open_databases" "database_reads" "database_writes" "request_time" "open_os_files"
do
        val=$($JSAWK "return this.couchdb[\"$ITER\"].current" < $TMP_COUCH)
        if [[ -z $val ]];then
                val=0
        fi
        desc=$(cat $TMP_COUCH|$JSAWK "return this.couchdb[\"$ITER\"].description"|tr ' ' '+'|tr 'number' 'Number'|tr 'length' 'Length')
        postdata=$postdata"$ITER:$val;"
        result=$result"$ITER:$desc:$UOM:2;";

done
#
#httpd
for ITER in "requests" "bulk_requests" "view_reads" "clients_requesting_changes" "temporary_view_reads"
do
        val=$($JSAWK "return this.httpd[\"$ITER\"].current" < $TMP_COUCH)
        if [[ -z $val ]];then
                val=0
        fi
        desc=$(cat $TMP_COUCH|$JSAWK "return this.httpd[\"$ITER\"].description"|tr ' ' '+'|tr 'number' 'Number'|tr 'length' 'Length')
        postdata=$postdata"$ITER:$val;"
        result=$result"$ITER:$desc:$UOM:2;";
done
#
#httpd_request_methods
for ITER in "DELETE" "HEAD" "POST" "PUT" "MOVE" "GET" "COPY"
do
        val=$($JSAWK "return this.httpd_request_methods[\"$ITER\"].current" < $TMP_COUCH)
        if [[ -z $val ]];then
                val=0
        fi
        desc=$(cat $TMP_COUCH|$JSAWK "return this.httpd_request_methods[\"$ITER\"].description"|tr ' ' '+'|tr 'number' 'Number'|tr 'length' 'Length')
        postdata=$postdata"$ITER:$val;"
        result=$result"$ITER:$desc:$UOM:2;";
done
#
#httpd_status_codes
for ITER in "400" "201" "403" "409" "200" "202" "404" "301" "405" "500" "401" "304" "412"
do
        val=$($JSAWK "return this.httpd_status_codes[\"$ITER\"].current" < $TMP_COUCH)
        if [[ -z $val ]];then
                val=0
        fi
        desc=$(cat $TMP_COUCH|$JSAWK "return this.httpd_status_codes[\"$ITER\"].description"|tr ' ' '+'|tr 'number' 'Number'|tr 'length' 'Length')
        postdata=$postdata"$ITER:$val;"
        result=$result"$ITER:$desc:$UOM:2;";
done
#
#end of get_data
test -f $TMP_COUCH && rm $TMP_COUCH > /dev/null
#
}
#
echo "***CouchDB Monitor start with following parameters***"
echo "Monitor name = $MONITOR_NAME"
# obtaining TOKEN
get_token
ret="$?"
if [[ ($ret -ne 0) ]]
then
	error 3 "$MSG"
else
	echo RECEIVE TOKEN: "$TOKEN" at `date -u -d @$(( $TOKEN_OBTAIN_TIME/1000 ))`
	echo "All is OK for now."
fi
#
get_data
RESULT_PARAMS="$result"
#
if [[ $1 == "create" ]];then
	# Adding custom monitor
	add_custom_monitor "$MONITOR_NAME" "$MONITOR_TAG" "$RESULT_PARAMS" "$ADDITIONAL_PARAMS" "$MONITOR_TYPE"
ret="$?"
if [[ ($ret -ne 0) ]]
then
	error "$ret" "$MSG"
else
	echo Custom monitor id = "$MONITOR_ID"
	echo "$MONITOR_ID" > $MONITOR_ID_FILE
	echo "All is OK for now."
	fi
fi

if [[ ($MONITOR_ID -le 0) ]]
then 
	echo MonitorId is still zero - try to obtain it from local cache
	if [[ ! -e "$MONITOR_ID_FILE" ]];then
		clear ;echo -e "\e[00;31mThis is because of file manipulations\e[00m"
		echo -e "\e[00;31mDON'T PANIC: Just delete your custom monitor from Monitis.com dashboard and\e[00m"
		echo -e "\e[00;31mrun 'monitis-couchdb-monitor create' again\e[00m"
		exit 5
	fi
	MONITOR_ID=$(cat $MONITOR_ID_FILE)
	ret="$?"
	if [[ ($ret -ne 0) ]]
	then
		error "Could not get monitor id from local cache [.monitor.id]"
	else
		echo Custom monitor id = "$MONITOR_ID"
		echo "All is OK for now."
	fi
fi

	get_token				# get new token in case of the existing one is too old
	ret="$1"
	if [[ ($ret -ne 0) ]]
	then	# some problems while getting token...
		error "$ret" "$MSG"
		exit 6
	fi
	ret="$1"
	if [[ ($ret -ne 0) ]];then
	    error "$ret" "$MSG"
	    exit 7
	fi

	# Compose monitor data
	get_data
	param=$postdata
	timestamp=`get_timestamp`
	# Sending to Monitis
	add_custom_monitor_data $param $timestamp
	ret="$?"
	if [[ ($ret -ne 0) ]];then
		error "$ret" "$MSG"
		exit 8
	else
		echo $( date +"%D %T" ) - The Custom monitor data were successfully added
	fi





